name: CatScreeningML CI Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  # Mintのセットアップ
  setup-mint:
    name: Setup Mint
    uses: ./.github/workflows/setup-mint.yml
    permissions:
      contents: read

  # --- ユニットテストを実行 ---
  run-tests:
    name: Run Unit Tests
    needs: setup-mint
    uses: ./.github/workflows/run-tests.yml 

  # テスト結果レポート生成
  report:
    name: Report Status
    needs:
      - run-tests
    if: always()
    uses: ./.github/workflows/test-reporter.yml
    with:
      test_run_outcome: ${{ needs.run-tests.outputs.test_result }} # Pass the single output

  # コードレビュー - PRの場合のみ実行
  code-review:
    name: Code Review
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write
      contents: read
    uses: ./.github/workflows/copilot-review.yml
    with:
      pr_number: ${{ github.event.pull_request.number }}
    secrets: inherit

  # ビルド完了通知
  notify:
    name: Notify Completion
    runs-on: ubuntu-latest
    needs:
      - report
      - code-review
    if: always()
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Determine Overall Status and Icon
        id: status_check
        run: |
          # Default to failure
          final_status="failure"
          final_icon="❌"
          final_message="CI Pipeline finished with failures."

          # Check if all critical preceding jobs succeeded
          # 'needs.report.outputs.overall_test_result' now reflects the outcome from run_all_tests
          if [[ "${{ needs.report.outputs.overall_test_result }}" == "success" && \
                ("${{ github.event_name }}" != "pull_request" || "${{ needs.code-review.result }}" == "success" || "${{ needs.code-review.result }}" == "skipped") ]]; then
            final_status="success"
            final_icon="✅"
            final_message="CI Pipeline Completed Successfully!"
          fi
          echo "status=$final_status" >> $GITHUB_OUTPUT
          echo "icon=$final_icon" >> $GITHUB_OUTPUT
          echo "message=$final_message" >> $GITHUB_OUTPUT

      - name: Add Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const test_status = '${{ needs.report.outputs.overall_test_result }}' === 'success' ? '✅' : ('${{ needs.report.outputs.overall_test_result }}' === 'skipped' ? '⏭️' : '❌');
            const review_status = '${{ needs.code-review.result }}' === 'success' ? '✅' : ('${{ needs.code-review.result }}' === 'skipped' ? '⏭️' : '❌');

            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: `## CI Pipeline Completed ${{ steps.status_check.outputs.icon }}\n
              ${{ steps.status_check.outputs.message }}\n
              ### ステータス概要:\n
              -   Overall Test Status: ${test_status}
              -   Code Review: ${review_status}
              `
            });
