name: Run MultiLabelTests

on:
  workflow_call:
    outputs:
      test_result:
        description: "MultiLabelTestsの結果"
        value: ${{ jobs.run-tests.outputs.result }}

jobs:
  run-tests:
    runs-on: macos-15
    outputs:
      result: ${{ steps.execute_tests.outcome }}
    env:
      MINT_PATH: ${{ github.workspace }}/.mint
      TEST_OUTPUT_PATH: "ci-outputs/test-results/multi-label-tests"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Mint packages
        uses: actions/cache@v4
        with:
          path: ${{ env.MINT_PATH }}
          key: ${{ runner.os }}-mint-${{ hashFiles('**/Mintfile') }}
          restore-keys: |
            ${{ runner.os }}-mint-

      - name: Install Mint
        run: brew install mint

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Generate Xcode Project
        run: mint run xcodegen generate

      - name: Create Test Output Directory
        run: mkdir -p ${{ env.TEST_OUTPUT_PATH }}

      - name: Run MultiLabelTests
        id: execute_tests
        run: |
          set -o pipefail
          xcodebuild test \
            -project "CatScreeningML.xcodeproj" \
            -scheme "MultiLabelTests" \
            -destination "platform=macOS" \
            -enableCodeCoverage NO \
            MACOSX_DEPLOYMENT_TARGET=15.2 \
            -resultBundlePath ./${{ env.TEST_OUTPUT_PATH }}/TestResults.xcresult \
            | xcbeautify --report junit --report-path ./${{ env.TEST_OUTPUT_PATH }}/junit.xml

      - name: Verify Test Results Bundle
        if: steps.execute_tests.outcome == 'success'
        run: |
          RESULT_BUNDLE_PATH="./${{ env.TEST_OUTPUT_PATH }}/TestResults.xcresult"
          if [ ! -d "$RESULT_BUNDLE_PATH" ]; then echo "❌ Error: Test result bundle not found at $RESULT_BUNDLE_PATH"; exit 1; fi
          echo "✅ Test result bundle found at $RESULT_BUNDLE_PATH"

      - name: Upload MultiLabelTests Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: multi-label-test-results-${{ github.run_id }}
          path: |
            ${{ env.TEST_OUTPUT_PATH }}/TestResults.xcresult
            ${{ env.TEST_OUTPUT_PATH }}/junit.xml
          retention-days: 7 